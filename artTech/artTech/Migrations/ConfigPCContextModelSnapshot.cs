// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using artTech.Data;

#nullable disable

namespace artTech.Migrations
{
    [DbContext(typeof(ConfigPCContext))]
    partial class ConfigPCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("artTech.Models.CPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPU_IntegratedGraphics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPU_Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPU_MemorySupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPU_Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CPU_TDP")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("CPUs");
                });

            modelBuilder.Entity("artTech.Models.ComputerCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComputerCase_SupportedMotherboards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("ComputerCases");
                });

            modelBuilder.Entity("artTech.Models.CoolingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoolingSysrem_Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoolingSysrem_TDP")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("CoolingSystems");
                });

            modelBuilder.Entity("artTech.Models.GPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GPU_Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPU_MemorySupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPU_RecommendedPowerSupply")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("GPUs");
                });

            modelBuilder.Entity("artTech.Models.Motherboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motherboard_CPU_Spport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motherboard_FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Motherboard_Maximum_RAM_Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Motherboard_Maximum_RAM_Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Motherboard_MemorySupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Motherboard_NumberOf_M2_Slots")
                        .HasColumnType("int");

                    b.Property<int>("Motherboard_NumberOf_RAM_Slots")
                        .HasColumnType("int");

                    b.Property<int>("Motherboard_NumberOf_SATA3_Slots")
                        .HasColumnType("int");

                    b.Property<string>("Motherboard_Socket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("artTech.Models.PC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("CPUId")
                        .HasColumnType("int");

                    b.Property<int>("ComputerCaseId")
                        .HasColumnType("int");

                    b.Property<int>("CoolingSystemId")
                        .HasColumnType("int");

                    b.Property<int>("GPUId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PowerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("RAMId")
                        .HasColumnType("int");

                    b.Property<int>("SSDId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CPUId");

                    b.HasIndex("ComputerCaseId");

                    b.HasIndex("CoolingSystemId");

                    b.HasIndex("GPUId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("PowerUnitId");

                    b.HasIndex("RAMId");

                    b.HasIndex("SSDId");

                    b.HasIndex("UserId");

                    b.ToTable("PCs");
                });

            modelBuilder.Entity("artTech.Models.Peeson.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("artTech.Models.Peeson.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<string>("CommentString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComputerCaseId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolingSystemId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUId")
                        .HasColumnType("int");

                    b.Property<int?>("MotherboardId")
                        .HasColumnType("int");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PowerUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("RAMId")
                        .HasColumnType("int");

                    b.Property<int?>("SSDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("ComputerCaseId");

                    b.HasIndex("CoolingSystemId");

                    b.HasIndex("GPUId");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("PowerUnitId");

                    b.HasIndex("RAMId");

                    b.HasIndex("SSDId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("artTech.Models.Peeson.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("artTech.Models.PowerUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerUnit_FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PowerUnit_Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("PowerUnits");
                });

            modelBuilder.Entity("artTech.Models.RAM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("RAM_CountOfSticks")
                        .HasColumnType("int");

                    b.Property<int>("RAM_Frequency")
                        .HasColumnType("int");

                    b.Property<string>("RAM_MemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RAM_OverallVolume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RAMs");
                });

            modelBuilder.Entity("artTech.Models.SSD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("SSD_FormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSD_Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SSDs");
                });

            modelBuilder.Entity("artTech.Models.PC", b =>
                {
                    b.HasOne("artTech.Models.Peeson.Admin", null)
                        .WithMany("PublishPC")
                        .HasForeignKey("AdminId");

                    b.HasOne("artTech.Models.CPU", "CPU")
                        .WithMany()
                        .HasForeignKey("CPUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.ComputerCase", "ComputerCase")
                        .WithMany()
                        .HasForeignKey("ComputerCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.CoolingSystem", "CoolingSystem")
                        .WithMany()
                        .HasForeignKey("CoolingSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.GPU", "GPU")
                        .WithMany()
                        .HasForeignKey("GPUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.Motherboard", "Motherboard")
                        .WithMany()
                        .HasForeignKey("MotherboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.PowerUnit", "PowerUnit")
                        .WithMany()
                        .HasForeignKey("PowerUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.RAM", "RAM")
                        .WithMany()
                        .HasForeignKey("RAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.SSD", "SSD")
                        .WithMany()
                        .HasForeignKey("SSDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("artTech.Models.Peeson.User", null)
                        .WithMany("SaveConfig")
                        .HasForeignKey("UserId");

                    b.Navigation("CPU");

                    b.Navigation("ComputerCase");

                    b.Navigation("CoolingSystem");

                    b.Navigation("GPU");

                    b.Navigation("Motherboard");

                    b.Navigation("PowerUnit");

                    b.Navigation("RAM");

                    b.Navigation("SSD");
                });

            modelBuilder.Entity("artTech.Models.Peeson.Comment", b =>
                {
                    b.HasOne("artTech.Models.CPU", null)
                        .WithMany("Comments")
                        .HasForeignKey("CPUId");

                    b.HasOne("artTech.Models.ComputerCase", null)
                        .WithMany("Comments")
                        .HasForeignKey("ComputerCaseId");

                    b.HasOne("artTech.Models.CoolingSystem", null)
                        .WithMany("Comments")
                        .HasForeignKey("CoolingSystemId");

                    b.HasOne("artTech.Models.GPU", null)
                        .WithMany("Comments")
                        .HasForeignKey("GPUId");

                    b.HasOne("artTech.Models.Motherboard", null)
                        .WithMany("Comments")
                        .HasForeignKey("MotherboardId");

                    b.HasOne("artTech.Models.PowerUnit", null)
                        .WithMany("Comments")
                        .HasForeignKey("PowerUnitId");

                    b.HasOne("artTech.Models.RAM", null)
                        .WithMany("Comments")
                        .HasForeignKey("RAMId");

                    b.HasOne("artTech.Models.SSD", null)
                        .WithMany("Comments")
                        .HasForeignKey("SSDId");
                });

            modelBuilder.Entity("artTech.Models.Peeson.User", b =>
                {
                    b.HasOne("artTech.Models.Peeson.Admin", null)
                        .WithMany("Users")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("artTech.Models.CPU", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.ComputerCase", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.CoolingSystem", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.GPU", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.Motherboard", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.Peeson.Admin", b =>
                {
                    b.Navigation("PublishPC");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("artTech.Models.Peeson.User", b =>
                {
                    b.Navigation("SaveConfig");
                });

            modelBuilder.Entity("artTech.Models.PowerUnit", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.RAM", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("artTech.Models.SSD", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
